{"version":3,"sources":["components/PhoneBook/redux/actions/actionTipes.js","components/PhoneBook/redux/reducers/appReducer.js","components/PhoneBook/redux/reducers/rootReducer.js","components/PhoneBook/redux/store.js","components/PhoneBook/Form/InputForm.js","components/PhoneBook/Buttons/BntFormSubmit.js","components/PhoneBook/Form/AddContact.js","components/PhoneBook/redux/actions/actions.js","components/PhoneBook/Buttons/BntFormDelete.js","components/PhoneBook/Contacts/ContactListItem.js","components/PhoneBook/Contacts/ContactList.js","components/PhoneBook/FindedContact/FindedContact.js","components/PhoneBook/App.js","index.js"],"names":["initialState","id","name","phone","combineReducers","appReducer","state","actions","type","types","payload","contact","filtered","filter","filteredReducer","console","log","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","InputForm","handleChange","config","placeholder","minLength","maxLength","value","style","width","onChange","BntFormSubmit","border","password","gender","AddContact","target","setState","contactsVerification","clients","client","every","client1","handleSubmit","event","preventDefault","date","Date","toDateString","shortID","props","addContact","onSubmit","this","inputName","inputPhone","Component","connect","dispath","contacts","onDelComponent","margin","height","onClick","ContactListItem","className","padding","display","flexDirection","alignItems","justifyContent","borderRadius","backgroundColor","filteredContacts","length","map","FindedContact","userSelector","toLowerCase","includes","prevProps","prevState","filteredClients","onClearArray","filterContact","arr","onFilterContact","App","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d70f8a3f.chunk.js","sourcesContent":["export default {\r\n  ADD_CONTACT: \"ADD_CONTACT\",\r\n  DELETE_CONTACT: \"DELETE_CONTACT\",\r\n  FILTER_CONTACT: \"FILTER_CONTACT\",\r\n  CLEAR_ARRAY: \"CLEAR_ARRAY\",\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport types from \"./../actions/actionTipes\";\r\nconst initialState = [\r\n  { id: \"323423r\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\r\n  { id: \"iwrwe2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\r\n  { id: \"ir43d-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\r\n  { id: \"idwer-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\r\n];\r\n\r\nconst appReducer = (state = [...initialState], actions) => {\r\n  switch (actions.type) {\r\n    case types.ADD_CONTACT:\r\n      return [...state, actions.payload.contact];\r\n\r\n    case types.DELETE_CONTACT:\r\n      const filtered = state.filter((contact) => {\r\n        return contact.id !== actions.payload;\r\n      });\r\n      return filtered;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//filter\r\nconst filteredReducer = (state = [], actions) => {\r\n  switch (actions.type) {\r\n    case types.FILTER_CONTACT:\r\n      console.log(\"object\", actions.payload);\r\n      return actions.payload;\r\n\r\n    case types.DELETE_CONTACT:\r\n      const filtered = state.filter((contact) => {\r\n        return contact.id !== actions.payload;\r\n      });\r\n      return filtered;\r\n\r\n    case types.CLEAR_ARRAY:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ appReducer, filteredReducer });\r\n","import { combineReducers } from \"redux\";\r\n// import { addContactReduser } from \"./redusers\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  appReducer,\r\n//   addContactReduser,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n} from \"redux-persist\"; /* save to localSTORE */\r\nimport storage from \"redux-persist/lib/storage\"; /* save to localSTORE */\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  //   blacklist: [\"todo/id\"],\r\n};\r\n\r\nexport const persistedReducer = persistReducer(\r\n  persistConfig,\r\n  rootReducer\r\n); /* save to localSTORE */\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n); /* save to localSTORE */\r\nexport const persistor = persistStore(store); /* save to localSTORE */\r\n\r\n// console.log(\"store.getState()\", store.getState());\r\n","import React from \"react\";\r\n\r\nexport function InputForm({\r\n  handleChange,\r\n  config: { name, placeholder, minLength, maxLength, type },\r\n  value,\r\n}) {\r\n  return (\r\n    <>\r\n      <label>\r\n        {name}\r\n        <input\r\n          style={{ width: 280 }}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          type={type}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n \r\nexport const BntFormSubmit = () => (\r\n    <button style={{ width: 280, border: \"2px dotted white\" }} \r\n    type=\"submit\">Submit</button>  \r\n);\r\n    ","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport shortID from \"shortid\";\n\nimport config from \"../config.json\";\nimport { InputForm } from \"./InputForm\";\nimport { BntFormSubmit } from \"../Buttons/BntFormSubmit\";\nimport { addContact } from \"../redux/actions/actions.js\";\nconst initialState = {\n  name: \"\",\n  phone: \"\",\n  password: \"\",\n  gender: \"\",\n  id: \"\",\n};\n\nclass AddContact extends Component {\n  state = { ...initialState };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  contactsVerification = (clients, client) => {\n    return clients.every((client1) => {\n      if (client1.name !== client.name && client1.phone !== client.phone) {\n        return true;\n      }\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const client = {\n      ...this.state,\n      date: new Date().toDateString(),\n      id: shortID(),\n    };\n\n    console.log(\"client\", client);\n    if (this.state.name !== \"\" && this.state.phone !== \"\") {\n      if (this.contactsVerification(this.props.clients, client)) {\n        console.log(\n          \"!this.contactsVerification(this.props.clients, client)\",\n          !this.contactsVerification(this.props.clients, client)\n        );\n        console.log(\"222\", 222);\n        this.props.addContact(client);\n      }\n    }\n    // this.resetForm();\n\n    this.setState(initialState);\n  };\n  // resetForm = () => {\n  //   this.setState(\n  //     {\n  //       name: \"\",\n  //       password: \"\",\n  //       gender: \"\",\n  //       phone: \"\",\n  //     },\n  //     () => console.log(this.state)\n  //   );\n  // };\n\n  render() {\n     return (\n      <form\n        onSubmit={this.handleSubmit}\n        style={{ width: 300, border: \"2px dotted white\" }}\n      >\n        <InputForm\n          handleChange={this.handleChange}\n          value={this.state.name}\n          config={config.inputName}\n        />\n        <InputForm\n          handleChange={this.handleChange}\n          value={this.state.phone}\n          config={config.inputPhone}\n        />\n        {/* <label>\n          <select\n            style={{\n              width: 280,\n              border: \"2px dotted white\",\n              backgroundColor: \"grey\",\n            }}\n            name=\"gender\"\n            value={this.state.gender}\n            onChange={this.handleChange}\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n        </label> */}\n        <BntFormSubmit />\n      </form>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    clients: state.appReducer.appReducer, // filter: state.appReducer.filter,};}\n  };\n};\nconst mapDispatchToProps = (dispath) => {\n  return {\n    addContact: (client) => dispath(addContact(client)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\n","import types from \"./actionTipes\";\r\n\r\nexport const addContact = (contact) => {\r\n  return {\r\n    type: types.ADD_CONTACT,\r\n    payload: {\r\n      contact,\r\n    },\r\n  };\r\n};\r\n\r\nexport const delComponent = (contacts, id) => {\r\n  return {\r\n    type: types.DELETE_CONTACT,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const onFilterContact = (filterContact) => {\r\n  console.log(\"filterContact\", filterContact);\r\n  return {\r\n    type: types.FILTER_CONTACT,\r\n\r\n    payload: filterContact,\r\n  };\r\n};\r\nexport const onClearArray = () => {\r\n\r\n  return {\r\n    type: types.CLEAR_ARRAY,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { delComponent } from \"../redux/actions/actions\";\r\n\r\nconst BntFormDelete = ({ contacts, id, onDelComponent }) => {\r\n  return (\r\n    <button\r\n      style={{ margin: 10, width: 50, height: 25, border: \"2px dotted white\" }}\r\n      onClick={() => onDelComponent(contacts, id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({contacts: state.appReducer});\r\n\r\nexport default connect(mapStateToProps, {onDelComponent: delComponent})(BntFormDelete);\r\n","import React from \"react\";\r\nimport BntFormDelete from \"../Buttons/BntFormDelete\";\r\nconst ContactListItem = ({ client: { id, name, phone } }) => {\r\n  // console.log('idContactListItem', id)\r\n  return (\r\n    <p className=\"clientName\">\r\n      {name}: {phone}\r\n      <BntFormDelete id={id} />\r\n    </p>\r\n  );\r\n};\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport { connect } from \"react-redux\";\r\nconst style = {\r\n  padding: \"10px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  width: 280,\r\n  borderRadius: \"15%\",\r\n  border: \"2px dotted white\",\r\n  backgroundColor: \"black\",\r\n};\r\n\r\nconst ContactList = (props) => {\r\n  const { clients, filteredContacts } = props;\r\n  return filteredContacts.length === 0\r\n    ? clients.map((client) => (\r\n        <div className={style} key={client.id}>\r\n          <ContactListItem client={client} />\r\n        </div>\r\n      ))\r\n    : filteredContacts.map((client) => (\r\n        <div className={style} key={client.id}>\r\n          <ContactListItem client={client} />\r\n        </div>\r\n      ));\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    clients: state.appReducer.appReducer,\r\n    filteredContacts: state.appReducer.filteredReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContactList from \"../Contacts/ContactList\";\r\nimport { onFilterContact, onClearArray } from \"../redux/actions/actions\";\r\n\r\nconst initialState = {\r\n  filter: \"\",\r\n};\r\n\r\nclass FindedContact extends Component {\r\n  state = initialState;\r\n  handleChange = ({ target: { value } }) => {\r\n    this.setState({ filter: value });\r\n  };\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const filteredClients = await this.userSelector(\r\n      this.props.clients,\r\n      this.state.filter\r\n    );\r\n    if (prevState.filter !== this.state.filter && this.state.filter === \"\") {\r\n      console.log('this.state.filter === \"\"', this.state.filter === \"\");\r\n      return this.props.onClearArray();\r\n    }\r\n    if (prevState.filter === this.state.filter) return;\r\n    this.props.filterContact(filteredClients);\r\n  }\r\n\r\n  userSelector = (clients, filter) => {\r\n    const { appReducer } = clients;\r\n    return appReducer.filter((client) =>\r\n      client.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\"Enter name to Saerch...\"}\r\n          value={this.state.filter}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div>\r\n          <ContactList />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    clients: state.appReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispath) => ({\r\n  filterContact: (arr) => dispath(onFilterContact(arr)),\r\n  onClearArray: () => dispath(onClearArray()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindedContact);\r\n","import React from \"react\";\nimport AddContact from \"./Form/AddContact\";\nimport  FindedContact  from \"./FindedContact/FindedContact\";\n\nconst App = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 280,\n      border: \"2px dotted white\",\n      backgroundColor: \"black\",\n    }}\n  >\n    <AddContact />\n    <FindedContact />\n  </div>\n);\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./components/PhoneBook/redux/store\";\nimport App from \"./components/PhoneBook/App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// console.log('persistor', persistor.getState())\n// console.log('store.getState(', store.getState())\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}